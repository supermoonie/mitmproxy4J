<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.supermoonie.proxy.swing.mapper.ConnectionOverviewMapper">

    <resultMap type="com.github.supermoonie.proxy.swing.entity.ConnectionOverview" id="ConnectionOverviewMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="requestId" column="request_id" jdbcType="VARCHAR"/>
        <result property="clientHost" column="client_host" jdbcType="VARCHAR"/>
        <result property="clientPort" column="client_port" jdbcType="INTEGER"/>
        <result property="dnsServer" column="dns_server" jdbcType="VARCHAR"/>
        <result property="remoteIp" column="remote_ip" jdbcType="VARCHAR"/>
        <result property="clientProtocol" column="client_protocol" jdbcType="VARCHAR"/>
        <result property="clientCipherSuite" column="client_cipher_suite" jdbcType="VARCHAR"/>
        <result property="clientSessionId" column="client_session_id" jdbcType="VARCHAR"/>
        <result property="serverSessionId" column="server_session_id" jdbcType="VARCHAR"/>
        <result property="serverProtocol" column="server_protocol" jdbcType="VARCHAR"/>
        <result property="serverCipherSuite" column="server_cipher_suite" jdbcType="VARCHAR"/>
        <result property="useSecondProxy" column="use_second_proxy" jdbcType="INTEGER"/>
        <result property="secondProxyHost" column="second_proxy_host" jdbcType="VARCHAR"/>
        <result property="secondProxyPort" column="second_proxy_port" jdbcType="INTEGER"/>
        <result property="connectStartTime" column="connect_start_time" jdbcType="INTEGER"/>
        <result property="connectEndTime" column="connect_end_time" jdbcType="INTEGER"/>
        <result property="dnsStartTime" column="dns_start_time" jdbcType="INTEGER"/>
        <result property="dnsEndTime" column="dns_end_time" jdbcType="INTEGER"/>
        <result property="timeCreated" column="time_created" jdbcType="VARCHAR"
                typeHandler="com.github.supermoonie.proxy.swing.db.TextDateTypeHandler"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ConnectionOverviewMap">
        select id,
               request_id,
               client_host,
               client_port,
               dns_server,
               remote_ip,
               client_protocol,
               client_cipher_suite,
               client_session_id,
               server_session_id,
               server_protocol,
               server_cipher_suite,
               use_second_proxy,
               second_proxy_host,
               second_proxy_port,
               connect_start_time,
               connect_end_time,
               dns_start_time,
               dns_end_time,
               time_created
        from connection_overview
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ConnectionOverviewMap">
        select id,
               request_id,
               client_host,
               client_port,
               dns_server,
               remote_ip,
               client_protocol,
               client_cipher_suite,
               client_session_id,
               server_session_id,
               server_protocol,
               server_cipher_suite,
               use_second_proxy,
               second_proxy_host,
               second_proxy_port,
               connect_start_time,
               connect_end_time,
               dns_start_time,
               dns_end_time,
               time_created
        from connection_overview
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ConnectionOverviewMap">
        select
        id, request_id, client_host, client_port, dns_server, remote_ip, client_protocol, client_cipher_suite,
        client_session_id, server_session_id, server_protocol, server_cipher_suite, use_second_proxy, second_proxy_host,
        second_proxy_port, connect_start_time, connect_end_time, dns_start_time, dns_end_time, time_created
        from connection_overview
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="requestId != null and requestId != ''">
                and request_id = #{requestId}
            </if>
            <if test="clientHost != null and clientHost != ''">
                and client_host = #{clientHost}
            </if>
            <if test="clientPort != null">
                and client_port = #{clientPort}
            </if>
            <if test="dnsServer != null and dnsServer != ''">
                and dns_server = #{dnsServer}
            </if>
            <if test="remoteIp != null and remoteIp != ''">
                and remote_ip = #{remoteIp}
            </if>
            <if test="clientProtocol != null and clientProtocol != ''">
                and client_protocol = #{clientProtocol}
            </if>
            <if test="clientCipherSuite != null and clientCipherSuite != ''">
                and client_cipher_suite = #{clientCipherSuite}
            </if>
            <if test="clientSessionId != null and clientSessionId != ''">
                and client_session_id = #{clientSessionId}
            </if>
            <if test="serverSessionId != null and serverSessionId != ''">
                and server_session_id = #{serverSessionId}
            </if>
            <if test="serverProtocol != null and serverProtocol != ''">
                and server_protocol = #{serverProtocol}
            </if>
            <if test="serverCipherSuite != null and serverCipherSuite != ''">
                and server_cipher_suite = #{serverCipherSuite}
            </if>
            <if test="useSecondProxy != null">
                and use_second_proxy = #{useSecondProxy}
            </if>
            <if test="secondProxyHost != null and secondProxyHost != ''">
                and second_proxy_host = #{secondProxyHost}
            </if>
            <if test="secondProxyPort != null">
                and second_proxy_port = #{secondProxyPort}
            </if>
            <if test="connectStartTime != null">
                and connect_start_time = #{connectStartTime}
            </if>
            <if test="connectEndTime != null">
                and connect_end_time = #{connectEndTime}
            </if>
            <if test="dnsStartTime != null">
                and dns_start_time = #{dnsStartTime}
            </if>
            <if test="dnsEndTime != null">
                and dns_end_time = #{dnsEndTime}
            </if>
            <if test="timeCreated != null">
                and time_created = #{timeCreated}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into connection_overview(id, request_id, client_host, client_port, dns_server, remote_ip,
                                        client_protocol, client_cipher_suite, client_session_id, server_session_id,
                                        server_protocol, server_cipher_suite, use_second_proxy, second_proxy_host,
                                        second_proxy_port, connect_start_time, connect_end_time, dns_start_time,
                                        dns_end_time)
        values (#{id}, #{requestId}, #{clientHost}, #{clientPort}, #{dnsServer}, #{remoteIp}, #{clientProtocol},
                #{clientCipherSuite}, #{clientSessionId}, #{serverSessionId}, #{serverProtocol}, #{serverCipherSuite},
                #{useSecondProxy}, #{secondProxyHost}, #{secondProxyPort}, #{connectStartTime}, #{connectEndTime},
                #{dnsStartTime}, #{dnsEndTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update connection_overview
        <set>
            <if test="requestId != null and requestId != ''">
                request_id = #{requestId},
            </if>
            <if test="clientHost != null and clientHost != ''">
                client_host = #{clientHost},
            </if>
            <if test="clientPort != null">
                client_port = #{clientPort},
            </if>
            <if test="dnsServer != null and dnsServer != ''">
                dns_server = #{dnsServer},
            </if>
            <if test="remoteIp != null and remoteIp != ''">
                remote_ip = #{remoteIp},
            </if>
            <if test="clientProtocol != null and clientProtocol != ''">
                client_protocol = #{clientProtocol},
            </if>
            <if test="clientCipherSuite != null and clientCipherSuite != ''">
                client_cipher_suite = #{clientCipherSuite},
            </if>
            <if test="clientSessionId != null and clientSessionId != ''">
                client_session_id = #{clientSessionId},
            </if>
            <if test="serverSessionId != null and serverSessionId != ''">
                server_session_id = #{serverSessionId},
            </if>
            <if test="serverProtocol != null and serverProtocol != ''">
                server_protocol = #{serverProtocol},
            </if>
            <if test="serverCipherSuite != null and serverCipherSuite != ''">
                server_cipher_suite = #{serverCipherSuite},
            </if>
            <if test="useSecondProxy != null">
                use_second_proxy = #{useSecondProxy},
            </if>
            <if test="secondProxyHost != null and secondProxyHost != ''">
                second_proxy_host = #{secondProxyHost},
            </if>
            <if test="secondProxyPort != null">
                second_proxy_port = #{secondProxyPort},
            </if>
            <if test="connectStartTime != null">
                connect_start_time = #{connectStartTime},
            </if>
            <if test="connectEndTime != null">
                connect_end_time = #{connectEndTime},
            </if>
            <if test="dnsStartTime != null">
                dns_start_time = #{dnsStartTime},
            </if>
            <if test="dnsEndTime != null">
                dns_end_time = #{dnsEndTime},
            </if>
            <if test="timeCreated != null">
                time_created = #{timeCreated},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from connection_overview
        where id = #{id}
    </delete>

</mapper>